{"version":3,"sources":["../../src/services/bledevice/bledevice.service.ts","../../src/services/servos/servos.service.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/device/device.component.ts","../../src/pages/servos/servos.component.ts","../../src/services/bledevice/bleServoCommunicator.service.ts","../../src/pages/servoSettings/servoSettings.component.ts","../../src/pages/logs/logs.component.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/services/log/log.service.ts","../../src/app/app.component.ts","../../src/services/log/logentry.ts","../../src/services/bledevice/bledevice.ts","../../src/services/servos/servo.ts","../../src/services/servos/servoConstants.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { BLE } from '@ionic-native/ble';\nimport { NgZone } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Bledevice } from './bledevice';\nimport { LogService } from '../../services/log/log.service';\n\n@Injectable(\n)\nexport class BleDeviceService {\n\n  public device: Bledevice;\n\n  constructor(ble:BLE, ngzone:NgZone, logs: LogService) { \n      this.device= new Bledevice(ble,ngzone,logs,\"\",\"\")\n  }\n  \n  setDevice(json: any){\n      let obj = Bledevice.decode(json);\n      this.device.id = obj.id\n      this.device.name = obj.name\n      this.device.connected=false;\n      this.device.connect()\n      \n  }\n  \n  clearDevice(){\n  }\n \n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/bledevice/bledevice.service.ts","import { Injectable } from '@angular/core';\nimport { Servo } from './servo';\nimport { ServoConstants } from './servoConstants';\nimport { LogService } from '../../services/log/log.service';\nimport { BleServoCommunicatorService } from '../../services/bledevice/bleServoCommunicator.service';\n@Injectable(\n)\nexport class ServoService {\n\n    // Common definitions . rhey have to be the same as in the \n    // used sketch!\n\n    currentServo: Servo;\n\n    servos: Servo[] = [];\n\n    constructor(ble: BleServoCommunicatorService, log: LogService) {\n        for (let i = 0; i < ServoConstants.NR_OF_SERVOS; i++) {\n            this.servos.push(new Servo(i, ble, log));\n        }\n\n\n    }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/servos/servos.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 114;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 114\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 155;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 155\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport {DeviceComponent} from '../device/device.component';\nimport {ServosComponent} from '../servos/servos.component';\nimport {LogsComponent} from '../logs/logs.component';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n  tabDeviceRoot=DeviceComponent;\n  tabServosRoot=ServosComponent;\n  tabLogsRoot=LogsComponent;\n  constructor() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component, NgZone } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { ToastController } from 'ionic-angular';\nimport { BLE } from '@ionic-native/ble';\nimport { LogService } from '../../services/log/log.service';\nimport { BleDeviceService } from '../../services/bledevice/bledevice.service';\n\n\n@Component({\n  selector: 'page-device',\n  templateUrl: './device.component.html'\n})\nexport class DeviceComponent  {\n  \n  devices: any[] = [];\n  statusMessage: string;\n\n  constructor(public navCtrl: NavController, \n              private toastCtrl: ToastController,\n              private ble: BLE,\n              private logService: LogService,\n              private bleDeviceService: BleDeviceService,\n              private ngZone: NgZone) { \n  }\n\n  ionViewDidEnter() {\n    console.log('ionViewDidEnter');\n    //this.scan();\n  }\n\n  scan() {\n    this.setStatus('Scanning for Bluetooth LE Devices');\n    this.devices = [];  // clear list\n    this.ble.scan([], 5).subscribe(\n      device => this.onDeviceDiscovered(device), \n      error => this.scanError(error)\n    );\n\n    setTimeout(this.setStatus.bind(this), 5000, 'Scan complete');\n  }\n\n  onDeviceDiscovered(device: any) {\n    console.log('Discovered ' + JSON.stringify(device, null, 2));\n    this.logService.add('Discovered ' + JSON.stringify(device, null, 2))\n    this.ngZone.run(() => {\n      this.devices.push(device);\n    });\n  }\n\n  // If location permission is denied, you'll end up here\n  scanError(error: string) {\n    this.setStatus('Error ' + error);\n    let toast = this.toastCtrl.create({\n      message: 'Error scanning for Bluetooth low energy devices',\n      position: 'middle',\n      duration: 5000\n    });\n    toast.present();\n  }\n\n   setStatus(message: string) {\n    console.log(message);\n    this.logService.add(message)\n    /*this.ngZone.run(() => {\n      this.statusMessage = message;\n    });*/\n    \n  } \n  \n    deviceSelected(device: any) {\n      console.log(JSON.stringify(device) + ' selected');\n      this.bleDeviceService.setDevice(device);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/device/device.component.ts","import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../../services/log/log.service';\nimport { ServoService } from '../../services/servos/servos.service';\nimport { Servo } from '../../services/servos/servo';\nimport { NavController } from 'ionic-angular';\nimport {ServoSettingsComponent} from '../servoSettings/servoSettings.component';\n\n\n\n@Component({\n  selector: 'page-servos',\n  templateUrl: './servos.component.html',\n  \n})\nexport class ServosComponent implements OnInit {\n  //private logService: LogService;\n  constructor(public navCtrl: NavController, public logService: LogService, public servoService:ServoService) { \n      //this.logService = logService;\n  }\n  \n  ngOnInit() {\n      this.logService.add(\"Calling Servos!\");\n  }\n\n  servoDetails(servo: Servo) {\n      console.log(JSON.stringify(servo.id) + ' selected');\n      this.servoService.currentServo=servo;\n      //this.bleDeviceService.setDevice(device);\n      this.navCtrl.push(ServoSettingsComponent)\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/servos/servos.component.ts","import { Injectable } from '@angular/core';\nimport { BleDeviceService } from './bledevice.service';\nimport { LogService } from '../log/log.service';\nimport { Servo } from '../servos/servo';\nimport { ServoConstants } from '../servos/servoConstants';\n\n@Injectable(\n)\nexport class BleServoCommunicatorService {\n\n\n    ble: BleDeviceService;\n    constructor( ble: BleDeviceService, log: LogService) {\n        \n    }\n\n    // Pack the number to send and the own id in a common array buffer\n    toArrayBuffer(servoId: number, para: number) {\n        let tempBuffer = new ArrayBuffer(2)\n        let fView1 = new Uint16Array(tempBuffer);\n        fView1[0] = para;\n        let fview2 = new Uint8Array(tempBuffer);\n        let result = new ArrayBuffer(3)\n        let fview3 = new Uint8Array(result);\n        fview3[0] = servoId;\n        fview3[1] = fview2[0];\n        fview3[2] = fview2[1];\n        return result;\n    }\n\n    sendPosLike(servo:Servo, posConstant:String){\n        let buffer = this.toArrayBuffer(servo.id, servo.pos)\n        this.ble.device.sendCharacteristic(ServoConstants.BLE_SERVICEADDRESS, posConstant, buffer);\n    }\n    \n    sendPos(servo: Servo) {\n        this.sendPosLike(servo,ServoConstants.GATT_UID_SETSERVOPOS)\n    }\n\n    sendZero(servo: Servo): any {\n        this.sendPosLike(servo,ServoConstants.GATT_UID_SETSERVOZERO)\n    }\n\n    updateServoZero(servo:Servo,count:number){\n        servo.zero=count;\n    }\n\n    requestZero(servo: Servo): any {\n        this.ble.device.getBufferFromDevice(ServoConstants.BLE_SERVICEADDRESS, ServoConstants.GATT_UID_GETSERVOZERO, servo, this.updateServoZero );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/bledevice/bleServoCommunicator.service.ts","import { Component, OnInit } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { LogService } from '../../services/log/log.service';\nimport { ServoService } from '../../services/servos/servos.service';\n\n@Component({\n  selector: 'page-servoSettings',\n  templateUrl: './servoSettings.component.html',\n  \n})\nexport class ServoSettingsComponent implements OnInit {\n  //private logService: LogService;\n  constructor(public navCtrl: NavController, public logService: LogService, public servoService:ServoService) { \n      //this.logService = logService;\n      \n  }\n  \n  ngOnInit() {\n      this.logService.add(\"Calling Servos!\");\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/servoSettings/servoSettings.component.ts","import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../../services/log/log.service';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-logs',\n  templateUrl: './logs.component.html',\n  \n})\nexport class LogsComponent implements OnInit {\n  //private logService: LogService;\n  constructor(public navCtrl: NavController, public logService: LogService) { \n      //this.logService = logService;\n  }\n  \n  ngOnInit() {\n      this.logService.add(\"Hello\");\n      this.logService.add(\"World\");\n  \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/logs/logs.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\n\nimport { TabsPage } from '../pages/tabs/tabs';\nimport {LogsComponent} from '../pages/logs/logs.component';\nimport {DeviceComponent} from '../pages/device/device.component';\nimport {ServosComponent} from '../pages/servos/servos.component';\nimport {ServoSettingsComponent} from '../pages/servoSettings/servoSettings.component';\n\n\nimport {LogService} from '../services/log/log.service';\nimport {BleDeviceService} from '../services/bledevice/bledevice.service';\nimport {BleServoCommunicatorService } from '../services/bledevice/bleServoCommunicator.service';\nimport {ServoService} from '../services/servos/servos.service';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { BLE } from '@ionic-native/ble';\n\n@NgModule({\n  declarations: [\n    MyApp,\n //   AboutPage,\n //   ContactPage,\n//    HomePage,\n    \n    TabsPage,\n    DeviceComponent,\n    ServosComponent,\n    ServoSettingsComponent,\n    LogsComponent\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    TabsPage,\n    DeviceComponent,\n    ServosComponent,\n    LogsComponent,\n    ServoSettingsComponent\n    \n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    LogService,\n    BleDeviceService,\n    BleServoCommunicatorService, \n    ServoService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    BLE\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Logentry } from './logentry';\n\n@Injectable(\n)\nexport class LogService {\n\n  constructor() { \n  }\n  logs: Logentry[] = [];\n \n  add(msg : string) {\n    this.logs.push(new Logentry(msg));\n  }\n \n  clear() {\n    this.logs = [];\n  }\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/log/log.service.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\nexport class Logentry {\n  date: Date;\n  message: string;\n  \n  constructor(msg: string){\n      this.date = new Date();\n      this.message=msg;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/log/logentry.ts","\nimport { BLE } from '@ionic-native/ble';\nimport { NgZone } from '@angular/core';\nimport { LogService } from '../../services/log/log.service';\nimport { ServoConstants } from '../servos/servoConstants';\n\n\ninterface bleJSON {\n    name: string;\n    age: number;\n    created: string;\n}\n\n\n\nexport class Bledevice {\n\n    public connected: boolean;\n    public peripheral: any = {};\n\n    constructor(\n        public ble: BLE,\n        public ngZone: NgZone,\n        public logs: LogService,\n        public name: string,\n        public id: string,\n\n    ) {\n        this.connected = false;\n    }\n\n    connect() {\n        this.ble.connect(this.id).subscribe(\n            peripheral => this.onConnected(peripheral),\n            peripheral => this.onDeviceDisconnected(peripheral)\n        );\n    }\n\n\n\n    onConnected(peripheral) {\n        this.ngZone.run(() => {\n            this.peripheral = peripheral;\n            this.logs.add(JSON.stringify(peripheral, null, 2))\n            this.connected = true;\n            // Test-Code: Send command \n\n        });\n    }\n\n    onDeviceDisconnected(peripheral) {\n        this.connected = false\n    }\n\n\n    static decode(json: bleJSON): Bledevice {\n        let bdev = Object.create(Bledevice.prototype);\n        return Object.assign(bdev, json, {\n\n        });\n    }\n\n    sendCharacteristic(service, characteristic, buffer) {\n        this.ble.write(this.peripheral.id, service, characteristic, buffer).then(\n            () => {\n                console.log(\"Success!\");\n                this.logs.add(\"Sending test command succeeded!\")\n            }, \n            e => {\n            console.log('Error!' + e);\n            this.logs.add(\"Sending command failed!!\")\n            }\n        )\n    }\n\n\n\n    getBufferFromDevice(service:string, characteristic:string, obToAttach: any, setter: (arg0: any,arg1: any) => any ) {\n        // We need a payload for writing to the device, lets create one\n        let buffer = new ArrayBuffer(1);\n        buffer[0]=1;\n        this.ble.write(this.peripheral.id, service, characteristic,buffer).then(\n            () => {\n                this.ble.read(this.peripheral.id,service,ServoConstants.GATT_UID_DORETURN).then(\n\n                    data => setter(obToAttach, data),\n                    () => console.log('Error! No data!' )\n                )\n\n            },\n            e => console.log('Error!' + e)\n        )\n\n\n        return 0\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/bledevice/bledevice.ts","\nimport { LogService } from '../../services/log/log.service';\nimport { BleServoCommunicatorService } from '../../services/bledevice/bleServoCommunicator.service';\nimport { ServoConstants } from './servoConstants';\n\nexport class Servo {\n    id: number;\n    pos: number;\n    leftLimit: number;\n    rightLimit: number;\n    zero: number;\n    bleServo: BleServoCommunicatorService;\n    log: LogService;\n    \n\n\n    constructor(nr: number, bleServo: BleServoCommunicatorService, log: LogService) {\n        this.id = nr;\n        this.pos = 0;\n        this.leftLimit=0;\n        this.rightLimit=ServoConstants.RESOLUTION_SERVOS;\n        this.zero=0;\n        this.bleServo = bleServo;\n        this.log = log;\n        this.initializeByle();\n    }\n\n    initializeByle(){\n        this.bleServo.requestZero(this);\n    }\n\n    // Sending the position !\n    sendPos() {\n        this.bleServo.sendPos(this);\n    }\n\n    // Sending the zero position!\n    sendZero() {\n        this.bleServo.sendZero(this);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/servos/servo.ts","import { Injectable } from '@angular/core';\n/* \nThese constants need to have exactly the same vals as the constants in the sketch!\n */\n@Injectable(\n)\nexport class ServoConstants {\n  // Common settings\n  static NR_OF_SERVOS = 16;\n  static RESOLUTION_SERVOS = 4095\n  // The settings for the bluetooth-communication:\n  static BLE_SERVICEADDRESS = '4d41';\n  static GATT_UID_SETSERVOPOS = '1010';\n  static GATT_UID_GETSERVOPOS = '1011';\n  static GATT_UID_SETSERVOZERO = '1020';\n  static GATT_UID_GETSERVOZERO = '1021';\n  static GATT_UID_SETSERVOLEFTLIMIT = '1030';\n  static GATT_UID_GETSERVOLEFTLIMIT = '1031';\n  static GATT_UID_SETSERVORIGHTLIMIT = '1040';\n  static GATT_UID_GETSERVORIGHTLIMIT = '1041';\n  static GATT_UID_DORETURN = '1050';\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/servos/servoConstants.ts"],"sourceRoot":""}